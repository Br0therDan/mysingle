"""Initial migration

Revision ID: 95219d8c5ed8
Revises: 
Create Date: 2024-08-17 17:49:57.907691

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '95219d8c5ed8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('index_daily_scrum_task_association', table_name='daily_scrum_task_association')
    op.drop_table('daily_scrum_task_association')
    op.drop_index('index_daily_scrum_update', table_name='daily_scrum_updates')
    op.drop_table('daily_scrum_updates')
    op.alter_column('accounts', 'account_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='계정ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('accounts', 'account_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='계정명',
               existing_nullable=False)
    op.alter_column('accounts', 'profile_id',
               existing_type=sa.UUID(),
               nullable=True,
               comment=None,
               existing_comment='계정관리자')
    op.alter_column('accounts', 'account_type',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='계정유형 : Prospect | Customer | Partner',
               existing_nullable=False,
               existing_server_default=sa.text("'Prospect'::character varying"))
    op.alter_column('accounts', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('accounts', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.drop_constraint('accounts_account_name_key', 'accounts', type_='unique')
    op.drop_index('index_accounts', table_name='accounts')
    op.drop_constraint('accounts_profile_id_fkey', 'accounts', type_='foreignkey')
    op.create_foreign_key(None, 'accounts', 'profiles', ['profile_id'], ['profile_id'])
    op.drop_table_comment(
        'accounts',
        existing_comment='어카운트',
        schema=None
    )
    op.drop_column('accounts', 'owner')
    op.alter_column('daily_scrums', 'daily_scrum_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='데일리스크럼ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('daily_scrums', 'scrum_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='스크럼 날짜',
               existing_nullable=False)
    op.alter_column('daily_scrums', 'summary',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               comment=None,
               existing_comment='summary',
               existing_nullable=True)
    op.alter_column('daily_scrums', 'sprint_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='스프린트ID',
               existing_nullable=False)
    op.alter_column('daily_scrums', 'project_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='프로젝트ID',
               existing_nullable=False)
    op.drop_index('index_daily_scrums', table_name='daily_scrums')
    op.drop_constraint('daily_scrums_project_id_fkey', 'daily_scrums', type_='foreignkey')
    op.drop_constraint('daily_scrums_sprint_id_fkey', 'daily_scrums', type_='foreignkey')
    op.create_foreign_key(None, 'daily_scrums', 'projects', ['project_id'], ['project_id'])
    op.create_foreign_key(None, 'daily_scrums', 'sprints', ['sprint_id'], ['sprint_id'])
    op.drop_table_comment(
        'daily_scrums',
        existing_comment='데일리 스크럼',
        schema=None
    )
    op.alter_column('opportunities', 'opportunity_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='기회ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('opportunities', 'opportunity_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='기회명',
               existing_nullable=False)
    op.alter_column('opportunities', 'close_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='미감일',
               existing_nullable=False)
    op.alter_column('opportunities', 'ACV',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               type_=sa.Float(),
               comment=None,
               existing_comment='연간계약금액',
               existing_nullable=False)
    op.alter_column('opportunities', 'account_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='계정ID',
               existing_nullable=False)
    op.alter_column('opportunities', 'stage',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='진행단계',
               existing_nullable=False)
    op.alter_column('opportunities', 'forecast_category',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='예측범주',
               existing_nullable=False)
    op.alter_column('opportunities', 'description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               comment=None,
               existing_comment='상세',
               existing_nullable=True)
    op.alter_column('opportunities', 'currency_code',
               existing_type=sa.CHAR(length=3),
               type_=sqlmodel.sql.sqltypes.AutoString(length=3),
               comment=None,
               existing_comment='통화코드',
               existing_nullable=False)
    op.alter_column('opportunities', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('opportunities', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('opportunities', 'profile_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='사용자ID',
               existing_nullable=False)
    op.drop_index('index_opportunity', table_name='opportunities')
    op.drop_constraint('opportunities_account_id_fkey', 'opportunities', type_='foreignkey')
    op.drop_constraint('opportunities_profile_id_fkey', 'opportunities', type_='foreignkey')
    op.create_foreign_key(None, 'opportunities', 'accounts', ['account_id'], ['account_id'])
    op.create_foreign_key(None, 'opportunities', 'profiles', ['profile_id'], ['profile_id'])
    op.drop_table_comment(
        'opportunities',
        existing_comment='영업기회',
        schema=None
    )
    op.alter_column('organizations', 'org_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='조직ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('organizations', 'org_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='조직명',
               existing_nullable=True)
    op.alter_column('organizations', 'org_type',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='조직유형',
               existing_nullable=True)
    op.alter_column('organizations', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('organizations', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.drop_index('index_orgs', table_name='organizations')
    op.drop_table_comment(
        'organizations',
        existing_comment='조직',
        schema=None
    )
    op.alter_column('profiles', 'profile_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='사용자ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('profiles', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='사용자이름 : IdP 에서 가져옴',
               existing_nullable=False)
    op.alter_column('profiles', 'email',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='이메일',
               existing_nullable=False)
    op.alter_column('profiles', 'org_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='소속회사',
               existing_nullable=False)
    op.alter_column('profiles', 'first_name',
               existing_type=sa.VARCHAR(length=30),
               comment=None,
               existing_comment='이름',
               existing_nullable=True)
    op.alter_column('profiles', 'last_name',
               existing_type=sa.VARCHAR(length=30),
               comment=None,
               existing_comment='성',
               existing_nullable=True)
    op.alter_column('profiles', 'job_role',
               existing_type=sa.VARCHAR(length=30),
               comment=None,
               existing_comment='직책',
               existing_nullable=True)
    op.alter_column('profiles', 'full_name',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='성명',
               existing_nullable=True)
    op.alter_column('profiles', 'work_email',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='업무용 이메일',
               existing_nullable=True)
    op.alter_column('profiles', 'is_verified',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='검증',
               existing_nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('profiles', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('profiles', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.drop_constraint('profiles_org_id_fkey', 'profiles', type_='foreignkey')
    op.create_foreign_key(None, 'profiles', 'organizations', ['org_id'], ['org_id'])
    op.drop_table_comment(
        'profiles',
        existing_comment='사용자',
        schema=None
    )
    op.alter_column('profiles_projects', 'profile_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='사용자ID',
               existing_nullable=False)
    op.alter_column('profiles_projects', 'project_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='프로젝트ID',
               existing_nullable=False)
    op.alter_column('profiles_projects', 'role',
               existing_type=sa.VARCHAR(length=20),
               nullable=True,
               comment=None,
               existing_comment='역할')
    op.alter_column('profiles_projects', 'joined_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               comment=None,
               existing_comment='참여일',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('index_profiles_projects', table_name='profiles_projects')
    op.drop_constraint('profiles_projects_profile_id_project_id_key', 'profiles_projects', type_='unique')
    op.drop_constraint('profiles_projects_profile_id_fkey', 'profiles_projects', type_='foreignkey')
    op.drop_constraint('profiles_projects_project_id_fkey', 'profiles_projects', type_='foreignkey')
    op.create_foreign_key(None, 'profiles_projects', 'profiles', ['profile_id'], ['profile_id'])
    op.create_foreign_key(None, 'profiles_projects', 'projects', ['project_id'], ['project_id'])
    op.drop_table_comment(
        'profiles_projects',
        existing_comment='사용자-프로젝트 링크',
        schema=None
    )
    op.alter_column('projects', 'project_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='프로젝트ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('projects', 'project_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='프로젝트명',
               existing_nullable=False)
    op.alter_column('projects', 'account_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='계정ID',
               existing_nullable=False)
    op.alter_column('projects', 'opportunity_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='기회ID',
               existing_nullable=True)
    op.alter_column('projects', 'profile_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='사용자ID',
               existing_nullable=False)
    op.alter_column('projects', 'description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               comment=None,
               existing_comment='상세',
               existing_nullable=True)
    op.alter_column('projects', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               comment=None,
               existing_comment='생성일시',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.drop_index('index_project', table_name='projects')
    op.drop_constraint('projects_account_id_fkey', 'projects', type_='foreignkey')
    op.drop_constraint('projects_opportunity_id_fkey', 'projects', type_='foreignkey')
    op.drop_constraint('projects_profile_id_fkey', 'projects', type_='foreignkey')
    op.create_foreign_key(None, 'projects', 'profiles', ['profile_id'], ['profile_id'])
    op.create_foreign_key(None, 'projects', 'opportunities', ['opportunity_id'], ['opportunity_id'])
    op.create_foreign_key(None, 'projects', 'accounts', ['account_id'], ['account_id'])
    op.drop_table_comment(
        'projects',
        existing_comment='프로젝트',
        schema=None
    )
    op.alter_column('sprints', 'sprint_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='스프린트ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('sprints', 'sprint_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='스프린트명',
               existing_nullable=False)
    op.alter_column('sprints', 'project_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='프로젝트ID',
               existing_nullable=False)
    op.alter_column('sprints', 'goal',
               existing_type=sa.VARCHAR(length=150),
               comment=None,
               existing_comment='목표',
               existing_nullable=True)
    op.alter_column('sprints', 'start_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='시작일',
               existing_nullable=False)
    op.alter_column('sprints', 'end_date',
               existing_type=sa.DATE(),
               comment=None,
               existing_comment='종료일',
               existing_nullable=False)
    op.alter_column('sprints', 'status',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='상태',
               existing_nullable=False)
    op.alter_column('sprints', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('sprints', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('index_sprint', table_name='sprints')
    op.drop_constraint('sprints_project_id_fkey', 'sprints', type_='foreignkey')
    op.create_foreign_key(None, 'sprints', 'projects', ['project_id'], ['project_id'])
    op.drop_table_comment(
        'sprints',
        existing_comment='스프린트',
        schema=None
    )
    op.alter_column('tasks', 'task_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='작업ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.alter_column('tasks', 'task_name',
               existing_type=sa.VARCHAR(length=100),
               comment=None,
               existing_comment='작업명',
               existing_nullable=False)
    op.alter_column('tasks', 'description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               comment=None,
               existing_comment='상세',
               existing_nullable=True)
    op.alter_column('tasks', 'priority',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='중요도',
               existing_nullable=False,
               existing_server_default=sa.text("'Low'::character varying"))
    op.alter_column('tasks', 'status',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='상태',
               existing_nullable=False)
    op.alter_column('tasks', 'assigned_to',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='담당자ID',
               existing_nullable=False)
    op.alter_column('tasks', 'sprint_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='스프린트ID',
               existing_nullable=False)
    op.alter_column('tasks', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('tasks', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               comment=None,
               existing_comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.drop_index('index_tasks', table_name='tasks')
    op.drop_constraint('tasks_sprint_id_fkey', 'tasks', type_='foreignkey')
    op.drop_constraint('tasks_assigned_to_fkey', 'tasks', type_='foreignkey')
    op.create_foreign_key(None, 'tasks', 'profiles', ['assigned_to'], ['profile_id'])
    op.create_foreign_key(None, 'tasks', 'sprints', ['sprint_id'], ['sprint_id'])
    op.drop_table_comment(
        'tasks',
        existing_comment='작업',
        schema=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table_comment(
        'tasks',
        '작업',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.create_foreign_key('tasks_assigned_to_fkey', 'tasks', 'profiles', ['assigned_to'], ['profile_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('tasks_sprint_id_fkey', 'tasks', 'sprints', ['sprint_id'], ['sprint_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_index('index_tasks', 'tasks', ['task_id', 'task_name', 'assigned_to', 'sprint_id', 'status', 'priority'], unique=False)
    op.alter_column('tasks', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('tasks', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('tasks', 'sprint_id',
               existing_type=sa.UUID(),
               comment='스프린트ID',
               existing_nullable=False)
    op.alter_column('tasks', 'assigned_to',
               existing_type=sa.UUID(),
               comment='담당자ID',
               existing_nullable=False)
    op.alter_column('tasks', 'status',
               existing_type=sa.VARCHAR(length=20),
               comment='상태',
               existing_nullable=False)
    op.alter_column('tasks', 'priority',
               existing_type=sa.VARCHAR(length=50),
               comment='중요도',
               existing_nullable=False,
               existing_server_default=sa.text("'Low'::character varying"))
    op.alter_column('tasks', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               comment='상세',
               existing_nullable=True)
    op.alter_column('tasks', 'task_name',
               existing_type=sa.VARCHAR(length=100),
               comment='작업명',
               existing_nullable=False)
    op.alter_column('tasks', 'task_id',
               existing_type=sa.UUID(),
               comment='작업ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table_comment(
        'sprints',
        '스프린트',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'sprints', type_='foreignkey')
    op.create_foreign_key('sprints_project_id_fkey', 'sprints', 'projects', ['project_id'], ['project_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_index('index_sprint', 'sprints', ['sprint_id', 'sprint_name', 'project_id'], unique=False)
    op.alter_column('sprints', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('sprints', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('sprints', 'status',
               existing_type=sa.VARCHAR(length=50),
               comment='상태',
               existing_nullable=False)
    op.alter_column('sprints', 'end_date',
               existing_type=sa.DATE(),
               comment='종료일',
               existing_nullable=False)
    op.alter_column('sprints', 'start_date',
               existing_type=sa.DATE(),
               comment='시작일',
               existing_nullable=False)
    op.alter_column('sprints', 'goal',
               existing_type=sa.VARCHAR(length=150),
               comment='목표',
               existing_nullable=True)
    op.alter_column('sprints', 'project_id',
               existing_type=sa.UUID(),
               comment='프로젝트ID',
               existing_nullable=False)
    op.alter_column('sprints', 'sprint_name',
               existing_type=sa.VARCHAR(length=100),
               comment='스프린트명',
               existing_nullable=False)
    op.alter_column('sprints', 'sprint_id',
               existing_type=sa.UUID(),
               comment='스프린트ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table_comment(
        'projects',
        '프로젝트',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.create_foreign_key('projects_profile_id_fkey', 'projects', 'profiles', ['profile_id'], ['profile_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('projects_opportunity_id_fkey', 'projects', 'opportunities', ['opportunity_id'], ['opportunity_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('projects_account_id_fkey', 'projects', 'accounts', ['account_id'], ['account_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_index('index_project', 'projects', ['project_id', 'project_name', 'account_id', 'profile_id'], unique=False)
    op.alter_column('projects', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               comment='생성일시',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               comment='상세',
               existing_nullable=True)
    op.alter_column('projects', 'profile_id',
               existing_type=sa.UUID(),
               comment='사용자ID',
               existing_nullable=False)
    op.alter_column('projects', 'opportunity_id',
               existing_type=sa.UUID(),
               comment='기회ID',
               existing_nullable=True)
    op.alter_column('projects', 'account_id',
               existing_type=sa.UUID(),
               comment='계정ID',
               existing_nullable=False)
    op.alter_column('projects', 'project_name',
               existing_type=sa.VARCHAR(length=100),
               comment='프로젝트명',
               existing_nullable=False)
    op.alter_column('projects', 'project_id',
               existing_type=sa.UUID(),
               comment='프로젝트ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table_comment(
        'profiles_projects',
        '사용자-프로젝트 링크',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'profiles_projects', type_='foreignkey')
    op.drop_constraint(None, 'profiles_projects', type_='foreignkey')
    op.create_foreign_key('profiles_projects_project_id_fkey', 'profiles_projects', 'projects', ['project_id'], ['project_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('profiles_projects_profile_id_fkey', 'profiles_projects', 'profiles', ['profile_id'], ['profile_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_unique_constraint('profiles_projects_profile_id_project_id_key', 'profiles_projects', ['profile_id', 'project_id'])
    op.create_index('index_profiles_projects', 'profiles_projects', ['profile_id', 'project_id', 'role'], unique=False)
    op.alter_column('profiles_projects', 'joined_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               comment='참여일',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('profiles_projects', 'role',
               existing_type=sa.VARCHAR(length=20),
               nullable=False,
               comment='역할')
    op.alter_column('profiles_projects', 'project_id',
               existing_type=sa.UUID(),
               comment='프로젝트ID',
               existing_nullable=False)
    op.alter_column('profiles_projects', 'profile_id',
               existing_type=sa.UUID(),
               comment='사용자ID',
               existing_nullable=False)
    op.create_table_comment(
        'profiles',
        '사용자',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'profiles', type_='foreignkey')
    op.create_foreign_key('profiles_org_id_fkey', 'profiles', 'organizations', ['org_id'], ['org_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.alter_column('profiles', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('profiles', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('profiles', 'is_verified',
               existing_type=sa.BOOLEAN(),
               comment='검증',
               existing_nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('profiles', 'work_email',
               existing_type=sa.VARCHAR(length=50),
               comment='업무용 이메일',
               existing_nullable=True)
    op.alter_column('profiles', 'full_name',
               existing_type=sa.VARCHAR(length=50),
               comment='성명',
               existing_nullable=True)
    op.alter_column('profiles', 'job_role',
               existing_type=sa.VARCHAR(length=30),
               comment='직책',
               existing_nullable=True)
    op.alter_column('profiles', 'last_name',
               existing_type=sa.VARCHAR(length=30),
               comment='성',
               existing_nullable=True)
    op.alter_column('profiles', 'first_name',
               existing_type=sa.VARCHAR(length=30),
               comment='이름',
               existing_nullable=True)
    op.alter_column('profiles', 'org_id',
               existing_type=sa.UUID(),
               comment='소속회사',
               existing_nullable=False)
    op.alter_column('profiles', 'email',
               existing_type=sa.VARCHAR(length=50),
               comment='이메일',
               existing_nullable=False)
    op.alter_column('profiles', 'username',
               existing_type=sa.VARCHAR(length=50),
               comment='사용자이름 : IdP 에서 가져옴',
               existing_nullable=False)
    op.alter_column('profiles', 'profile_id',
               existing_type=sa.UUID(),
               comment='사용자ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table_comment(
        'organizations',
        '조직',
        existing_comment=None,
        schema=None
    )
    op.create_index('index_orgs', 'organizations', ['org_id'], unique=False)
    op.alter_column('organizations', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('organizations', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('organizations', 'org_type',
               existing_type=sa.VARCHAR(length=50),
               comment='조직유형',
               existing_nullable=True)
    op.alter_column('organizations', 'org_name',
               existing_type=sa.VARCHAR(length=100),
               comment='조직명',
               existing_nullable=True)
    op.alter_column('organizations', 'org_id',
               existing_type=sa.UUID(),
               comment='조직ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table_comment(
        'opportunities',
        '영업기회',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'opportunities', type_='foreignkey')
    op.drop_constraint(None, 'opportunities', type_='foreignkey')
    op.create_foreign_key('opportunities_profile_id_fkey', 'opportunities', 'profiles', ['profile_id'], ['profile_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('opportunities_account_id_fkey', 'opportunities', 'accounts', ['account_id'], ['account_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_index('index_opportunity', 'opportunities', ['opportunity_id', 'opportunity_name', 'account_id', 'stage', 'forecast_category', 'close_date'], unique=False)
    op.alter_column('opportunities', 'profile_id',
               existing_type=sa.UUID(),
               comment='사용자ID',
               existing_nullable=False)
    op.alter_column('opportunities', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('opportunities', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('opportunities', 'currency_code',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=3),
               type_=sa.CHAR(length=3),
               comment='통화코드',
               existing_nullable=False)
    op.alter_column('opportunities', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               comment='상세',
               existing_nullable=True)
    op.alter_column('opportunities', 'forecast_category',
               existing_type=sa.VARCHAR(length=50),
               comment='예측범주',
               existing_nullable=False)
    op.alter_column('opportunities', 'stage',
               existing_type=sa.VARCHAR(length=50),
               comment='진행단계',
               existing_nullable=False)
    op.alter_column('opportunities', 'account_id',
               existing_type=sa.UUID(),
               comment='계정ID',
               existing_nullable=False)
    op.alter_column('opportunities', 'ACV',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=15, scale=2),
               comment='연간계약금액',
               existing_nullable=False)
    op.alter_column('opportunities', 'close_date',
               existing_type=sa.DATE(),
               comment='미감일',
               existing_nullable=False)
    op.alter_column('opportunities', 'opportunity_name',
               existing_type=sa.VARCHAR(length=100),
               comment='기회명',
               existing_nullable=False)
    op.alter_column('opportunities', 'opportunity_id',
               existing_type=sa.UUID(),
               comment='기회ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table_comment(
        'daily_scrums',
        '데일리 스크럼',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'daily_scrums', type_='foreignkey')
    op.drop_constraint(None, 'daily_scrums', type_='foreignkey')
    op.create_foreign_key('daily_scrums_sprint_id_fkey', 'daily_scrums', 'sprints', ['sprint_id'], ['sprint_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key('daily_scrums_project_id_fkey', 'daily_scrums', 'projects', ['project_id'], ['project_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_index('index_daily_scrums', 'daily_scrums', ['daily_scrum_id', 'scrum_date', 'sprint_id', 'project_id'], unique=False)
    op.alter_column('daily_scrums', 'project_id',
               existing_type=sa.UUID(),
               comment='프로젝트ID',
               existing_nullable=False)
    op.alter_column('daily_scrums', 'sprint_id',
               existing_type=sa.UUID(),
               comment='스프린트ID',
               existing_nullable=False)
    op.alter_column('daily_scrums', 'summary',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               comment='summary',
               existing_nullable=True)
    op.alter_column('daily_scrums', 'scrum_date',
               existing_type=sa.DATE(),
               comment='스크럼 날짜',
               existing_nullable=False)
    op.alter_column('daily_scrums', 'daily_scrum_id',
               existing_type=sa.UUID(),
               comment='데일리스크럼ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.add_column('accounts', sa.Column('owner', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_table_comment(
        'accounts',
        '어카운트',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'accounts', type_='foreignkey')
    op.create_foreign_key('accounts_profile_id_fkey', 'accounts', 'profiles', ['profile_id'], ['profile_id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_index('index_accounts', 'accounts', ['account_id', 'account_name', 'profile_id'], unique=False)
    op.create_unique_constraint('accounts_account_name_key', 'accounts', ['account_name'])
    op.alter_column('accounts', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='수정일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('accounts', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               comment='생성일시',
               existing_server_default=sa.text('now()'))
    op.alter_column('accounts', 'account_type',
               existing_type=sa.VARCHAR(length=50),
               comment='계정유형 : Prospect | Customer | Partner',
               existing_nullable=False,
               existing_server_default=sa.text("'Prospect'::character varying"))
    op.alter_column('accounts', 'profile_id',
               existing_type=sa.UUID(),
               nullable=False,
               comment='계정관리자')
    op.alter_column('accounts', 'account_name',
               existing_type=sa.VARCHAR(length=100),
               comment='계정명',
               existing_nullable=False)
    op.alter_column('accounts', 'account_id',
               existing_type=sa.UUID(),
               comment='계정ID',
               existing_nullable=False,
               existing_server_default=sa.text('gen_random_uuid()'))
    op.create_table('daily_scrum_updates',
    sa.Column('update_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False, comment='스크럼업데이트ID'),
    sa.Column('yesterday_work', sa.TEXT(), autoincrement=False, nullable=True, comment='전날업무내용'),
    sa.Column('today_work', sa.TEXT(), autoincrement=False, nullable=True, comment='오늘업무내용'),
    sa.Column('impediemnts', sa.TEXT(), autoincrement=False, nullable=True, comment='장애물'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False, comment='생성일시'),
    sa.Column('daily_scrum_id', sa.UUID(), autoincrement=False, nullable=False, comment='데일리스크럼ID'),
    sa.Column('profile_id', sa.UUID(), autoincrement=False, nullable=False, comment='사용자ID'),
    sa.ForeignKeyConstraint(['daily_scrum_id'], ['daily_scrums.daily_scrum_id'], name='daily_scrum_update_daily_scrum_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.profile_id'], name='daily_scrum_update_profile_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('update_id', name='daily_scrum_update_pkey'),
    comment='데일리 스크럼 업데이트'
    )
    op.create_index('index_daily_scrum_update', 'daily_scrum_updates', ['update_id', 'daily_scrum_id', 'profile_id'], unique=False)
    op.create_table('daily_scrum_task_association',
    sa.Column('task_id', sa.UUID(), autoincrement=False, nullable=False, comment='작업ID'),
    sa.Column('daily_scrum_id', sa.UUID(), autoincrement=False, nullable=False, comment='데일리스크럼ID'),
    sa.ForeignKeyConstraint(['daily_scrum_id'], ['daily_scrums.daily_scrum_id'], name='daily_scrum_task_association_daily_scrum_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], name='daily_scrum_task_association_task_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.UniqueConstraint('task_id', 'daily_scrum_id', name='daily_scrum_task_association_task_id_daily_scrum_id_key'),
    comment='스크럼-테스크-연결'
    )
    op.create_index('index_daily_scrum_task_association', 'daily_scrum_task_association', ['task_id', 'daily_scrum_id'], unique=False)
    # ### end Alembic commands ###
